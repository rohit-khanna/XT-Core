!function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);var o=class{constructor(t="<Enter Name>",e="<Enter City>"){this.name=t,this.city=e}};var n=class{log(...t){console.log(...t)}logE(t){console.error(t)}};const i=new class{constructor(t,e){this.serviceApi=t,this.outputAdaptor=e}createNewProfile(t,e){const r=new o(t,e);this.serviceApi.saveAsync(r).then(t=>{this.outputAdaptor.log("The new Profile Created with id:",t.id)}).catch(t=>this.outputAdaptor.logE(t))}getProfiles(t){t?this.serviceApi.findByIdAsync(t).then(t=>{this.outputAdaptor.log(t)}).catch(t=>this.outputAdaptor.logE(t)):this.serviceApi.findAllAsync().then(t=>{this.outputAdaptor.log(t)}).catch(t=>this.outputAdaptor.logE(t))}update(t,e,r){if(!t)return void this.outputAdaptor.logE("Error: UI:Profile Identifier Not Supplied");let o={id:t};e&&(o.city=e),r&&(o.name=r),this.serviceApi.updateAsync(o).then(t=>{this.outputAdaptor.log("The Profile Uopdated for id:",t.id)}).catch(t=>this.outputAdaptor.logE(t))}deleteById(t){t?this.serviceApi.removeAsync(t).then(t=>{this.outputAdaptor.log("Removed",t)}).catch(t=>this.outputAdaptor.logE(t)):this.outputAdaptor.logE("Error: UI:Profile Identifier Not Supplied")}}(new class{constructor(t){this.dal=t}async _handleDALResponse(t){if(200===t.status||201===t.status)return await t.json();throw"ServiceAPI Call failed. Status Code:"+t.status+"  "+t.statusText}async saveAsync(t){try{let e=await this.dal.save(t);return this._handleDALResponse(e)}catch(t){throw new Error("save():"+t)}}async findAllAsync(){try{return this._handleDALResponse(await this.dal.findAll())}catch(t){throw new Error("findAll():"+t)}}async findByIdAsync(t){try{return this._handleDALResponse(await this.dal.findById(t))}catch(t){throw new Error("findById():"+t)}}async updateAsync(t){try{let e=await this.dal.update(t);return this._handleDALResponse(e)}catch(t){throw new Error("update():"+t)}}async removeAsync(t){try{let e=await this.dal.removeById(t);return this._handleDALResponse(e)}catch(t){throw new Error("remove():"+t)}}}(new class{constructor(t){this.url=t}async save(t){return await fetch(this.url,{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)})}async findAll(){return await fetch(this.url)}async findById(t){return await fetch(this.url+"/"+t)}async update(t){return await fetch(this.url+"/"+t.id,{method:"PUT",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)})}async removeById(t){return await fetch(this.url+"/"+t,{method:"DELETE",headers:{"Content-Type":"application/json; charset=utf-8"}})}}("http://localhost:3000/profile")),new n);i.getProfiles(),i.createNewProfile("Sanjay222","Nagpur"),i.getProfiles()}]);